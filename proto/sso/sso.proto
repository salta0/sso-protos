syntax = "proto3";

package auth;

option go_package = "salta.sso.v1;ssov1";

service Auth {
  rpc Register(RegisterRequest) returns(RegisterResponse);
  rpc Login(LoginRequest) returns(LoginResponse);
  rpc IsAdmin(IsAdminRequest) returns(IsAdminResponse);
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  int64 id = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
  int32 app_id = 3;
}

message LoginResponse {
  string token = 1;
}

message IsAdminRequest {
  int64 user_id = 1;
}

message IsAdminResponse {
  bool is_admin = 1;
}

// protoc -I proto proto/sso/sso.proto --go_out=./gen/go --go_opt=paths=source_relative --go-grpc_out=./gen/go --go-grpc_opt=paths=source_relative

// -I proto - папка, где будут лежать все протофайлы

// proto/sso/sso.proto - что хотим сгенерировать

// --go_out=./gen/go - куда положит сгенерированные go файлы

// --go_opt=paths=source_relative - опция, которая указывает, что сгенерированные файлы 
// будут использовать тот же пакет, что и исходные прото файлы

// --go-grpc_out=./gen/go куда складывать go grpc код

// --go-grpc_opt=paths=source_relative файлы grpc так же будут использовать тот же пакет
